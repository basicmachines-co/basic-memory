# Example Docker Compose configurations for Basic Memory
# Copy the relevant section to your docker-compose.yml and modify as needed

# ================================================================================
# Example 1: Simple Obsidian Vault Integration
# ================================================================================
version: '3.8'
services:
  basic-memory-obsidian:
    build: .
    container_name: basic-memory-obsidian
    volumes:
      # Replace with your actual Obsidian vault path
      - /Users/yourname/Documents/MyVault:/data/knowledge:rw
      - basic-memory-config:/root/.basic-memory:rw
    environment:
      - BASIC_MEMORY_PROJECTS={"obsidian": "/data/knowledge"}
      - BASIC_MEMORY_DEFAULT_PROJECT=obsidian
      - BASIC_MEMORY_SYNC_CHANGES=true
    command: ["basic-memory", "mcp"]
    restart: unless-stopped

volumes:
  basic-memory-config:

---

# ================================================================================
# Example 2: Multiple Knowledge Bases
# ================================================================================
version: '3.8'
services:
  basic-memory-multi:
    build: .
    container_name: basic-memory-multi
    volumes:
      - /path/to/personal-notes:/data/projects/personal:rw
      - /path/to/work-notes:/data/projects/work:rw
      - /path/to/research:/data/projects/research:rw
      - basic-memory-config:/root/.basic-memory:rw
    environment:
      - BASIC_MEMORY_PROJECTS={"personal": "/data/projects/personal", "work": "/data/projects/work", "research": "/data/projects/research"}
      - BASIC_MEMORY_DEFAULT_PROJECT=personal
      - BASIC_MEMORY_SYNC_CHANGES=true
    command: ["basic-memory", "mcp"]
    restart: unless-stopped

volumes:
  basic-memory-config:

---

# ================================================================================
# Example 3: HTTP Transport for External Integration
# ================================================================================
version: '3.8'
services:
  basic-memory-http:
    build: .
    container_name: basic-memory-http
    volumes:
      - ./knowledge:/data/knowledge:rw
      - basic-memory-config:/root/.basic-memory:rw
    environment:
      - BASIC_MEMORY_PROJECTS={"main": "/data/knowledge"}
      - BASIC_MEMORY_DEFAULT_PROJECT=main
      - BASIC_MEMORY_SYNC_CHANGES=true
    ports:
      - "8000:8000"
    command: ["basic-memory", "mcp", "--transport", "sse", "--host", "0.0.0.0", "--port", "8000"]
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  basic-memory-config:

---

# ================================================================================
# Example 4: Integration with Existing MCP Server Stack
# ================================================================================
version: '3.8'
services:
  # Your existing MCP server
  mcp-proxy:
    image: your-mcp-server:latest
    container_name: mcp-proxy
    depends_on:
      - basic-memory
    networks:
      - mcp-network
    # ... your MCP server configuration

  # Basic Memory as a service
  basic-memory:
    build: .
    container_name: basic-memory-service
    volumes:
      - ./shared-knowledge:/data/knowledge:rw
      - basic-memory-config:/root/.basic-memory:rw
    environment:
      - BASIC_MEMORY_PROJECTS={"shared": "/data/knowledge"}
      - BASIC_MEMORY_DEFAULT_PROJECT=shared
      - BASIC_MEMORY_SYNC_CHANGES=true
    networks:
      - mcp-network
    command: ["basic-memory", "mcp", "--transport", "sse", "--host", "0.0.0.0", "--port", "8000"]
    restart: unless-stopped

volumes:
  basic-memory-config:

networks:
  mcp-network:
    driver: bridge

---

# ================================================================================
# Example 5: Development Environment with Debug Logging
# ================================================================================
version: '3.8'
services:
  basic-memory-dev:
    build: .
    container_name: basic-memory-dev
    volumes:
      - ./dev-knowledge:/data/knowledge:rw
      - basic-memory-config:/root/.basic-memory:rw
      # Mount source code for development (optional)
      # - ./src:/app/src:ro
    environment:
      - BASIC_MEMORY_PROJECTS={"dev": "/data/knowledge"}
      - BASIC_MEMORY_DEFAULT_PROJECT=dev
      - BASIC_MEMORY_SYNC_CHANGES=true
      - BASIC_MEMORY_LOG_LEVEL=DEBUG
      - BASIC_MEMORY_SYNC_DELAY=500  # Faster sync for development
    ports:
      - "8000:8000"
    command: ["basic-memory", "mcp", "--transport", "sse", "--host", "0.0.0.0", "--port", "8000"]
    restart: unless-stopped

volumes:
  basic-memory-config:

---

# ================================================================================
# Example 6: Production Deployment with Resource Limits
# ================================================================================
version: '3.8'
services:
  basic-memory-prod:
    build: .
    container_name: basic-memory-prod
    volumes:
      - /var/data/knowledge:/data/knowledge:rw
      - basic-memory-config:/root/.basic-memory:rw
    environment:
      - BASIC_MEMORY_PROJECTS={"production": "/data/knowledge"}
      - BASIC_MEMORY_DEFAULT_PROJECT=production
      - BASIC_MEMORY_SYNC_CHANGES=true
      - BASIC_MEMORY_LOG_LEVEL=INFO
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'
    healthcheck:
      test: ["CMD", "basic-memory", "--version"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    command: ["basic-memory", "mcp"]

volumes:
  basic-memory-config:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /var/data/basic-memory-config

---

# ================================================================================
# Example 7: Using with External Database (Advanced)
# ================================================================================
version: '3.8'
services:
  basic-memory-external-db:
    build: .
    container_name: basic-memory-external
    volumes:
      - ./knowledge:/data/knowledge:rw
      # Mount external database location
      - /external/storage/basic-memory:/root/.basic-memory:rw
    environment:
      - BASIC_MEMORY_PROJECTS={"main": "/data/knowledge"}
      - BASIC_MEMORY_DEFAULT_PROJECT=main
      - BASIC_MEMORY_SYNC_CHANGES=true
    command: ["basic-memory", "mcp"]
    restart: unless-stopped

# Note: No volumes section - using external storage